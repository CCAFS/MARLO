/*
 * This file is part of Managing Agricultural Research for Learning & *CCAFS P&R is free software:you can redistribute
 * it and/or
 * modify*it under the terms of the GNU General Public License as published by*the Free Software Foundation,either
 * version 3 of the License,or*at your option)any later version.*CCAFS P&R is distributed in the hope that it will be
 * useful,*but WITHOUT ANY WARRANTY;without even the implied warranty of*MERCHANTABILITY or FITNESS FOR A PARTICULAR
 * PURPOSE.See the*GNU General Public License for more details.*You should have received a copy of the GNU General
 * Public License*along with CCAFS P&R.If not,see<http:// www.gnu.org/licenses/>.
 *****************************************************************/

package org.cgiar.ccafs.marlo.data.model;
// Generated Jun 23, 2016 11:32:10 AM by Hibernate Tools 4.3.1.Final


import org.cgiar.ccafs.marlo.data.IAuditLog;

import com.google.gson.annotations.Expose;

/**
 * CrpClusterActivityLeader generated by hbm2java
 */
public class CrpClusterActivityLeader extends MarloAuditableEntity implements java.io.Serializable, IAuditLog {


  /**
   * 
   */
  private static final long serialVersionUID = -5736083093255018407L;

  @Expose
  private CrpClusterOfActivity crpClusterOfActivity;
  @Expose
  private User user;

  public CrpClusterActivityLeader() {
  }

  @Override
  public boolean equals(Object obj) {
    if (this == obj) {
      return true;
    }
    if (obj == null) {
      return false;
    }
    if (this.getClass() != obj.getClass()) {
      return false;
    }
    CrpClusterActivityLeader other = (CrpClusterActivityLeader) obj;
    if (this.getId() == null) {
      if (other.getId() != null) {
        return false;
      }
    } else if (!this.getId().equals(other.getId())) {
      return false;
    }
    return true;
  }

  public CrpClusterOfActivity getCrpClusterOfActivity() {
    return this.crpClusterOfActivity;
  }

  @Override
  public String getLogDeatil() {
    StringBuilder sb = new StringBuilder();
    sb.append("Id : ").append(this.getId());
    return sb.toString();
  }

  public User getUser() {
    return this.user;
  }

  @Override
  public int hashCode() {
    final int prime = 31;
    int result = 1;
    result = prime * result + ((this.getId() == null) ? 0 : this.getId().hashCode());
    return result;
  }


  public void setCrpClusterOfActivity(CrpClusterOfActivity crpClusterOfActivities) {
    this.crpClusterOfActivity = crpClusterOfActivities;
  }

  public void setUser(User usersByUserId) {
    this.user = usersByUserId;
  }


  @Override
  public String toString() {
    return "CrpClusterActivityLeader [id=" + this.getId() + ", crpClusterOfActivity=" + crpClusterOfActivity + ", user="
      + user + "]";
  }


}


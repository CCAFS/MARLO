package org.cgiar.ccafs.marlo.data.model;
// Generated Feb 5, 2018 11:32:15 AM by Hibernate Tools 3.4.0.CR1


import org.cgiar.ccafs.marlo.data.IAuditLog;

import java.util.Date;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

import com.google.gson.annotations.Expose;

/**
 * PowbEvidence generated by hbm2java
 */
public class PowbEvidence implements java.io.Serializable, IAuditLog {


  private static final long serialVersionUID = -8817130891128431256L;


  @Expose
  private Long id;


  @Expose
  private User modifiedBy;


  private PowbSynthesis powbSynthesis;


  @Expose
  private User createdBy;


  @Expose
  private String narrative;


  @Expose
  private boolean active;

  @Expose
  private Date activeSince;

  @Expose
  private String modificationJustification;

  private Set<PowbEvidencePlannedStudy> powbEvidencePlannedStudies = new HashSet<PowbEvidencePlannedStudy>(0);
  private List<PowbEvidencePlannedStudy> plannedStudies;

  private List<ProjectExpectedStudy> expectedStudies;

  private String plannedStudiesValue;

  public PowbEvidence() {
  }

  public Date getActiveSince() {
    return activeSince;
  }

  public User getCreatedBy() {
    return createdBy;
  }

  public List<ProjectExpectedStudy> getExpectedStudies() {
    return expectedStudies;
  }

  @Override
  public Long getId() {
    return id;
  }


  @Override
  public String getLogDeatil() {
    StringBuilder sb = new StringBuilder();
    sb.append("Id : ").append(this.getId());
    return sb.toString();
  }

  @Override
  public String getModificationJustification() {
    return modificationJustification;
  }


  @Override
  public User getModifiedBy() {
    return modifiedBy;
  }


  public String getNarrative() {
    return narrative;
  }


  public List<PowbEvidencePlannedStudy> getPlannedStudies() {
    return plannedStudies;
  }


  public String getPlannedStudiesValue() {
    return plannedStudiesValue;
  }


  public Set<PowbEvidencePlannedStudy> getPowbEvidencePlannedStudies() {
    return powbEvidencePlannedStudies;
  }


  public PowbSynthesis getPowbSynthesis() {
    return powbSynthesis;
  }


  /**
   * @return an array of integers.
   */
  public long[] getStudiesIds() {

    List<ProjectExpectedStudy> expectedStudies = this.getExpectedStudies();
    if (expectedStudies != null) {
      long[] ids = new long[expectedStudies.size()];
      for (int i = 0; i < ids.length; i++) {
        ids[i] = expectedStudies.get(i).getId();
      }
      return ids;
    }
    return null;
  }


  @Override
  public boolean isActive() {
    return active;
  }

  public void setActive(boolean active) {
    this.active = active;
  }

  public void setActiveSince(Date activeSince) {
    this.activeSince = activeSince;
  }

  public void setCreatedBy(User createdBy) {
    this.createdBy = createdBy;
  }

  public void setExpectedStudies(List<ProjectExpectedStudy> expectedStudies) {
    this.expectedStudies = expectedStudies;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public void setModificationJustification(String modificationJustification) {
    this.modificationJustification = modificationJustification;
  }

  public void setModifiedBy(User modifiedBy) {
    this.modifiedBy = modifiedBy;
  }

  public void setNarrative(String narrative) {
    this.narrative = narrative;
  }

  public void setPlannedStudies(List<PowbEvidencePlannedStudy> plannedStudies) {
    this.plannedStudies = plannedStudies;
  }

  public void setPlannedStudiesValue(String plannedStudiesValue) {
    this.plannedStudiesValue = plannedStudiesValue;
  }


  public void setPowbEvidencePlannedStudies(Set<PowbEvidencePlannedStudy> powbEvidencePlannedStudies) {
    this.powbEvidencePlannedStudies = powbEvidencePlannedStudies;
  }


  public void setPowbSynthesis(PowbSynthesis powbSynthesis) {
    this.powbSynthesis = powbSynthesis;
  }

}


package org.cgiar.ccafs.marlo.data.model;
// Generated Aug 22, 2016 10:31:13 AM by Hibernate Tools 4.3.1.Final


import org.cgiar.ccafs.marlo.data.IAuditLog;

import java.util.Date;

import com.google.gson.annotations.Expose;

/**
 * ProjectMilestone generated by hbm2java
 */
public class ProjectMilestone implements java.io.Serializable, IAuditLog {


  /**
   * 
   */
  private static final long serialVersionUID = -6474276163660867919L;


  @Expose
  private Long id;

  @Expose
  private CrpMilestone crpMilestone;
  @Expose
  private ProjectOutcome projectOutcome;
  @Expose
  private User modifiedBy;
  @Expose
  private User createdBy;
  @Expose
  private boolean active;
  @Expose
  private Date activeSince;
  @Expose
  private String modificationJustification;
  @Expose
  private Long expectedValue;
  @Expose
  private SrfTargetUnit expectedUnit;

  @Expose
  private Long achievedValue;
  @Expose
  private String narrativeTarget;
  @Expose
  private String narrativeAchieved;


  @Expose
  private int year;

  public ProjectMilestone() {
  }

  public ProjectMilestone(CrpMilestone crpMilestone, ProjectOutcome projectOutcome, User usersByModifiedBy,
    User usersByCreatedBy, boolean isActive, Date activeSince, String modificationJustification) {
    this.crpMilestone = crpMilestone;
    this.projectOutcome = projectOutcome;
    this.modifiedBy = usersByModifiedBy;
    this.createdBy = usersByCreatedBy;
    this.active = isActive;
    this.activeSince = activeSince;
    this.modificationJustification = modificationJustification;
  }


  @Override
  public boolean equals(Object obj) {
    if (this == obj) {
      return true;
    }
    if (obj == null) {
      return false;
    }
    if (this.getClass() != obj.getClass()) {
      return false;
    }
    ProjectMilestone other = (ProjectMilestone) obj;
    if (id == null) {
      if (other.id != null) {
        return false;
      }
    } else if (!id.equals(other.id)) {
      return false;
    }
    return true;
  }


  public Long getAchievedValue() {
    return achievedValue;
  }


  public Date getActiveSince() {
    return activeSince;
  }

  public User getCreatedBy() {
    return createdBy;
  }


  public CrpMilestone getCrpMilestone() {
    return crpMilestone;
  }


  public SrfTargetUnit getExpectedUnit() {
    return expectedUnit;
  }


  public Long getExpectedValue() {
    return expectedValue;
  }


  @Override
  public Long getId() {
    return id;
  }


  @Override
  public String getLogDeatil() {
    StringBuilder sb = new StringBuilder();

    sb.append("Id : ").append(this.getId());


    return sb.toString();
  }


  @Override
  public String getModificationJustification() {
    return modificationJustification;
  }


  @Override
  public User getModifiedBy() {
    return modifiedBy;
  }

  public String getNarrativeAchieved() {
    return narrativeAchieved;
  }


  public String getNarrativeTarget() {
    return narrativeTarget;
  }


  public ProjectOutcome getProjectOutcome() {
    return projectOutcome;
  }


  public int getYear() {
    return year;
  }


  @Override
  public int hashCode() {
    final int prime = 31;
    int result = 1;
    result = prime * result + ((id == null) ? 0 : id.hashCode());
    return result;
  }


  @Override
  public boolean isActive() {
    return active;
  }


  public void setAchievedValue(Long achievedValue) {
    this.achievedValue = achievedValue;
  }


  public void setActive(boolean active) {
    this.active = active;
  }


  public void setActiveSince(Date activeSince) {
    this.activeSince = activeSince;
  }


  public void setCreatedBy(User createdBy) {
    this.createdBy = createdBy;
  }


  public void setCrpMilestone(CrpMilestone crpMilestone) {
    this.crpMilestone = crpMilestone;
  }


  public void setExpectedUnit(SrfTargetUnit expectedUnit) {
    this.expectedUnit = expectedUnit;
  }


  public void setExpectedValue(Long expectedValue) {
    this.expectedValue = expectedValue;
  }


  public void setId(Long id) {
    this.id = id;
  }


  public void setModificationJustification(String modificationJustification) {
    this.modificationJustification = modificationJustification;
  }


  public void setModifiedBy(User modifiedBy) {
    this.modifiedBy = modifiedBy;
  }


  public void setNarrativeAchieved(String narrativeAchieved) {
    this.narrativeAchieved = narrativeAchieved;
  }


  public void setNarrativeTarget(String narrativeTarget) {
    this.narrativeTarget = narrativeTarget;
  }


  public void setProjectOutcome(ProjectOutcome projectOutcome) {
    this.projectOutcome = projectOutcome;
  }

  public void setYear(int year) {
    this.year = year;
  }

  @Override
  public String toString() {
    return "ProjectMilestone [id=" + id + ", crpMilestone=" + crpMilestone + ", projectOutcome=" + projectOutcome
      + ", expectedValue=" + expectedValue + ", expectedUnit=" + expectedUnit + ", achievedValue=" + achievedValue
      + ", narrativeTarget=" + narrativeTarget + ", year=" + year + "]";
  }

}


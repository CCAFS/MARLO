package org.cgiar.ccafs.marlo.data.model;
// Generated Feb 5, 2018 11:32:15 AM by Hibernate Tools 3.4.0.CR1


import org.cgiar.ccafs.marlo.data.IAuditLog;

import java.util.Date;

import com.google.gson.annotations.Expose;

/**
 * PowbEvidence generated by hbm2java
 */
public class PowbSynthesisCrpStaffingCategory implements java.io.Serializable, IAuditLog {


  private static final long serialVersionUID = -8817130891128431256L;


  @Expose
  private Long id;

  @Expose
  private PowbSynthesis powbSynthesis;

  @Expose
  private PowbCrpStaffingCategories powbCrpStaffingCategory;

  @Expose
  private Double female;

  @Expose
  private Double male;


  @Expose
  private Double femaleNoCgiar;

  @Expose
  private Double maleNoCgiar;

  @Expose
  private User createdBy;


  @Expose
  private boolean active;


  @Expose
  private Date activeSince;


  @Expose
  private User modifiedBy;

  @Expose
  private String modificationJustification;


  public PowbSynthesisCrpStaffingCategory() {
  }


  public Date getActiveSince() {
    return activeSince;
  }


  public User getCreatedBy() {
    return createdBy;
  }


  public Double getFemale() {
    return female;
  }


  public Double getFemaleNoCgiar() {
    return femaleNoCgiar;
  }


  public Double getFemalePercentage() {
    Double femaleT;
    femaleT = female == null ? 0.0 : female;
    Double femaleNoCgT;
    femaleNoCgT = femaleNoCgiar == null ? 0.0 : femaleNoCgiar;
    if (this.getTotalFTE() != 0) {
      return Math.round((((femaleT + femaleNoCgT) * 100) / this.getTotalFTE()) * 10.0) / 10.0;
    } else {
      return 0.0;
    }
  }

  @Override
  public Long getId() {
    return id;
  }

  @Override
  public String getLogDeatil() {
    StringBuilder sb = new StringBuilder();
    sb.append("Id : ").append(this.getId());
    return sb.toString();
  }

  public Double getMale() {
    return male;
  }

  public Double getMaleNoCgiar() {
    return maleNoCgiar;
  }


  @Override
  public String getModificationJustification() {
    return modificationJustification;
  }


  @Override
  public User getModifiedBy() {
    return modifiedBy;
  }


  public PowbCrpStaffingCategories getPowbCrpStaffingCategory() {
    return powbCrpStaffingCategory;
  }


  public PowbSynthesis getPowbSynthesis() {
    return powbSynthesis;
  }


  public Double getTotalFTE() {
    Double maleT;
    Double femaleT;
    maleT = male == null ? 0.0 : male;
    Double maleNoCgT;
    Double femaleNoCgT;
    maleT = male == null ? 0.0 : male;
    maleNoCgT = maleNoCgiar == null ? 0.0 : maleNoCgiar;
    femaleT = female == null ? 0.0 : female;
    femaleNoCgT = femaleNoCgiar == null ? 0.0 : femaleNoCgiar;
    if (maleT + maleNoCgT + femaleT + femaleNoCgT != 0) {
      return Math.round(((maleT + maleNoCgT + femaleT + femaleNoCgT)) * 10.0) / 10.0;
    } else {
      return 0.0;
    }
  }

  @Override
  public boolean isActive() {
    return active;
  }


  public void setActive(boolean active) {
    this.active = active;
  }


  public void setActiveSince(Date activeSince) {
    this.activeSince = activeSince;
  }


  public void setCreatedBy(User createdBy) {
    this.createdBy = createdBy;
  }

  public void setFemale(Double female) {
    this.female = female;
  }

  public void setFemaleNoCgiar(Double femaleNoCgiar) {
    this.femaleNoCgiar = femaleNoCgiar;
  }


  public void setId(Long id) {
    this.id = id;
  }

  public void setMale(Double male) {
    this.male = male;
  }


  public void setMaleNoCgiar(Double maleNoCgiar) {
    this.maleNoCgiar = maleNoCgiar;
  }


  public void setModificationJustification(String modificationJustification) {
    this.modificationJustification = modificationJustification;
  }


  public void setModifiedBy(User modifiedBy) {
    this.modifiedBy = modifiedBy;
  }

  public void setPowbCrpStaffingCategory(PowbCrpStaffingCategories powbCrpStaffingCategory) {
    this.powbCrpStaffingCategory = powbCrpStaffingCategory;
  }

  public void setPowbSynthesis(PowbSynthesis powbSynthesis) {
    this.powbSynthesis = powbSynthesis;
  }

}


/*****************************************************************
 * This file is part of Managing Agricultural Research for Learning &
 * Outcomes Platform (MARLO).
 * MARLO is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * at your option) any later version.
 * MARLO is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 * You should have received a copy of the GNU General Public License
 * along with MARLO. If not, see <http://www.gnu.org/licenses/>.
 *****************************************************************/
package org.cgiar.ccafs.marlo.data.model;
// Generated May 26, 2016 9:42:28 AM by Hibernate Tools 4.3.1.Final


import org.cgiar.ccafs.marlo.data.IAuditLog;

import java.util.HashSet;
import java.util.List;
import java.util.Set;

import com.google.gson.annotations.Expose;

/**
 * SrfIdo generated by hbm2java
 */
public class SrfIdo extends MarloAuditableEntity implements java.io.Serializable, IAuditLog {


  private static final long serialVersionUID = 8353586687845581811L;


  @Expose
  private SrfCrossCuttingIssue srfCrossCuttingIssue;

  @Expose
  private String description;

  @Expose
  private boolean isCrossCutting;

  @Expose
  private String smoCode;

  private Set<SrfSloIdo> srfSloIdos = new HashSet<SrfSloIdo>(0);

  private Set<SrfSubIdo> srfSubIdos = new HashSet<SrfSubIdo>(0);

  private List<SrfSubIdo> subIdos;

  public SrfIdo() {
  }


  @Override
  public boolean equals(Object obj) {
    if (this == obj) {
      return true;
    }
    if (obj == null) {
      return false;
    }

    SrfIdo other = (SrfIdo) obj;
    if (this.getId() == null) {
      if (other.getId() != null) {
        return false;
      }
    } else if (!this.getId().equals(other.getId())) {
      return false;
    }
    return true;
  }

  public String getDescription() {
    return this.description;
  }

  @Override
  public String getLogDeatil() {
    StringBuilder sb = new StringBuilder();
    sb.append("Id : ").append(this.getId());
    return sb.toString();
  }

  public String getSmoCode() {
    return smoCode;
  }

  public SrfCrossCuttingIssue getSrfCrossCuttingIssue() {
    return this.srfCrossCuttingIssue;
  }

  public Set<SrfSloIdo> getSrfSloIdos() {
    return this.srfSloIdos;
  }

  public Set<SrfSubIdo> getSrfSubIdos() {
    return this.srfSubIdos;
  }

  public List<SrfSubIdo> getSubIdos() {
    return subIdos;
  }

  @Override
  public int hashCode() {
    final int prime = 31;
    int result = 1;
    result = prime * result + ((this.getId() == null) ? 0 : this.getId().hashCode());
    return result;
  }

  public boolean isIsCrossCutting() {
    return this.isCrossCutting;
  }


  public void setDescription(String description) {
    this.description = description;
  }

  public void setIsCrossCutting(boolean isCrossCutting) {
    this.isCrossCutting = isCrossCutting;
  }

  public void setSmoCode(String smoCode) {
    this.smoCode = smoCode;
  }


  public void setSrfCrossCuttingIssue(SrfCrossCuttingIssue srfCrossCuttingIssues) {
    this.srfCrossCuttingIssue = srfCrossCuttingIssues;
  }

  public void setSrfSloIdos(Set<SrfSloIdo> srfSloIdos) {
    this.srfSloIdos = srfSloIdos;
  }

  public void setSrfSubIdos(Set<SrfSubIdo> srfSubIdos) {
    this.srfSubIdos = srfSubIdos;
  }

  public void setSubIdos(List<SrfSubIdo> subIdos) {
    this.subIdos = subIdos;
  }

  @Override
  public String toString() {
    return "SrfIdo [id=" + this.getId() + ", srfCrossCuttingIssue=" + srfCrossCuttingIssue + ", description="
      + description + ", isCrossCutting=" + isCrossCutting + "]";
  }
}


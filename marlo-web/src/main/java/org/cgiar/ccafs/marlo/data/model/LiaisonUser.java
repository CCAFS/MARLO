/*****************************************************************
 * This file is part of Managing Agricultural Research for Learning &
 * Outcomes Platform (MARLO).
 * MARLO is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * at your option) any later version.
 * MARLO is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 * You should have received a copy of the GNU General Public License
 * along with MARLO. If not, see <http://www.gnu.org/licenses/>.
 *****************************************************************/
package org.cgiar.ccafs.marlo.data.model;
// Generated Jul 13, 2016 11:45:52 AM by Hibernate Tools 4.3.1.Final


import org.cgiar.ccafs.marlo.data.IAuditLog;

import java.util.HashSet;
import java.util.Set;

import com.google.gson.annotations.Expose;

/**
 * LiaisonUser generated by hbm2java
 */
public class LiaisonUser extends MarloSoftDeleteableEntity implements java.io.Serializable, IAuditLog {


  /**
   * 
   */
  private static final long serialVersionUID = -2344785951769472166L;


  @Expose
  private LiaisonInstitution liaisonInstitution;
  @Expose
  private User user;
  @Expose
  private GlobalUnit crp;
  private Set<ProjectInfo> projects = new HashSet<ProjectInfo>(0);

  public LiaisonUser() {
  }

  public LiaisonUser(LiaisonInstitution liaisonInstitution, User user) {
    this.liaisonInstitution = liaisonInstitution;
    this.user = user;
  }

  @Override
  public boolean equals(Object obj) {
    if (this == obj) {
      return true;
    }
    if (obj == null) {
      return false;
    }
    if (this.getClass() != obj.getClass()) {
      return false;
    }
    LiaisonUser other = (LiaisonUser) obj;
    if (this.getId() == null) {
      if (other.getId() != null) {
        return false;
      }
    } else if (!this.getId().equals(other.getId())) {
      return false;
    }
    return true;
  }

  public String getComposedName() {
    return user.getComposedName();
  }


  public GlobalUnit getCrp() {
    return crp;
  }


  public LiaisonInstitution getLiaisonInstitution() {
    return liaisonInstitution;
  }


  @Override
  public String getLogDeatil() {
    StringBuilder sb = new StringBuilder();

    sb.append("Id : ").append(this.getId());


    return sb.toString();
  }


  @Override
  public String getModificationJustification() {

    return "";
  }


  @Override
  public User getModifiedBy() {
    User user = new User();
    user.setId(new Long(3));
    return user;
  }


  public Set<ProjectInfo> getProjects() {
    return projects;
  }


  public User getUser() {
    return user;
  }

  public void setCrp(GlobalUnit crp) {
    this.crp = crp;
  }

  public void setLiaisonInstitution(LiaisonInstitution liaisonInstitution) {
    this.liaisonInstitution = liaisonInstitution;
  }


  public void setProjects(Set<ProjectInfo> projects) {
    this.projects = projects;
  }


  public void setUser(User user) {
    this.user = user;
  }


  @Override
  public String toString() {
    return "LiaisonUser [id=" + this.getId() + ", liaisonInstitution=" + liaisonInstitution + ", user=" + user
      + ", crp=" + crp + "]";
  }


}


/*****************************************************************
 * This file is part of Managing Agricultural Research for Learning &
 * Outcomes Platform (MARLO).
 * MARLO is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * at your option) any later version.
 * MARLO is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 * You should have received a copy of the GNU General Public License
 * along with MARLO. If not, see <http://www.gnu.org/licenses/>.
 *****************************************************************/
package org.cgiar.ccafs.marlo.data.model;

import org.cgiar.ccafs.marlo.data.IAuditLog;

import java.util.Date;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

import com.google.gson.annotations.Expose;

// Generated May 26, 2016 9:42:28 AM by Hibernate Tools 4.3.1.Final

/**
 * CrpProgram generated by hbm2java
 */
public class CenterProgram implements java.io.Serializable, IAuditLog {


  private static final long serialVersionUID = -7720585854691931655L;


  @Expose
  private Long id;

  @Expose
  private CenterArea researchArea;


  @Expose
  private String name;

  @Expose
  private String acronym;


  private CenterAllTypes programType;

  private Set<CenterLeader> researchLeaders = new HashSet<CenterLeader>(0);


  private Set<CenterTopic> researchTopics = new HashSet<CenterTopic>(0);

  private Set<CenterImpact> researchImpacts = new HashSet<CenterImpact>(0);


  private Set<CenterSectionStatus> sectionStatuses = new HashSet<CenterSectionStatus>(0);

  private Set<CenterProject> projects = new HashSet<CenterProject>(0);


  private Set<CenterSubmission> submissions = new HashSet<CenterSubmission>(0);

  private List<CenterImpact> impacts;


  private List<CenterTopic> topics;

  private List<CenterLeader> leaders;

  @Expose
  private String color;

  @Expose
  private String impactColor;


  @Expose
  private boolean active;

  @Expose
  private Date activeSince;


  @Expose
  private User createdBy;

  @Expose
  private User modifiedBy;

  @Expose
  private String modificationJustification;

  public CenterProgram() {
  }

  /**
   * @param name
   * @param acronym
   * @param programType
   * @param active
   * @param color
   * @param researchCenter
   * @param researchArea
   * @param researchLeaders
   */
  public CenterProgram(String name, String acronym, CenterAllTypes programType, boolean active, String color,
    CenterArea researchArea, Set<CenterLeader> researchLeaders, Set<CenterTopic> researchTopics) {
    super();
    this.name = name;
    this.acronym = acronym;
    this.programType = programType;
    this.active = active;
    this.color = color;
    this.researchArea = researchArea;
    this.researchLeaders = researchLeaders;
    this.researchTopics = researchTopics;
  }

  public CenterProgram(String name, String acronym, CenterAllTypes programType, CenterArea researchArea) {
    this.name = name;
    this.acronym = acronym;
    this.programType = programType;
    this.researchArea = researchArea;
  }

  @Override
  public boolean equals(Object obj) {
    if (this == obj) {
      return true;
    }
    if (obj == null) {
      return false;
    }
    if (this.getClass() != obj.getClass()) {
      return false;
    }
    CenterProgram other = (CenterProgram) obj;
    if (id == null) {
      if (other.id != null) {
        return false;
      }
    } else if (!id.equals(other.id)) {
      return false;
    }
    return true;
  }

  public String getAcronym() {
    return this.acronym;
  }

  public Date getActiveSince() {
    return activeSince;
  }

  public String getColor() {
    return color;
  }

  public String getComposedName() {
    return this.acronym + ": " + this.name;
  }

  public User getCreatedBy() {
    return createdBy;
  }

  @Override
  public Long getId() {
    return this.id;
  }

  public String getImpactColor() {
    return impactColor;
  }

  public List<CenterImpact> getImpacts() {
    return impacts;
  }

  public List<CenterLeader> getLeaders() {
    return leaders;
  }

  @Override
  public String getLogDeatil() {
    StringBuilder sb = new StringBuilder();
    sb.append("Id : ").append(this.getId());
    return sb.toString();
  }

  public String getModificationJustification() {
    return modificationJustification;
  }

  @Override
  public User getModifiedBy() {
    return modifiedBy;
  }

  public String getName() {
    return this.name;
  }

  /**
   * @return the programType
   */
  public CenterAllTypes getProgramType() {
    return programType;
  }


  public Set<CenterProject> getProjects() {
    return projects;
  }

  /**
   * @return the researchArea
   */
  public CenterArea getResearchArea() {
    return researchArea;
  }

  public Set<CenterImpact> getResearchImpacts() {
    return researchImpacts;
  }

  /**
   * @return the researchLeaders
   */
  public Set<CenterLeader> getResearchLeaders() {
    return researchLeaders;
  }

  public Set<CenterTopic> getResearchTopics() {
    return researchTopics;
  }

  public Set<CenterSectionStatus> getSectionStatuses() {
    return sectionStatuses;
  }

  public Set<CenterSubmission> getSubmissions() {
    return submissions;
  }

  public List<CenterTopic> getTopics() {
    return topics;
  }

  @Override
  public boolean isActive() {
    return active;
  }

  public void setAcronym(String acronym) {
    this.acronym = acronym;
  }

  public void setActive(boolean active) {
    this.active = active;
  }

  public void setActiveSince(Date activeSince) {
    this.activeSince = activeSince;
  }

  public void setColor(String color) {
    this.color = color;
  }


  public void setCreatedBy(User createdBy) {
    this.createdBy = createdBy;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public void setImpactColor(String impactColor) {
    this.impactColor = impactColor;
  }


  public void setImpacts(List<CenterImpact> impacts) {
    this.impacts = impacts;
  }


  public void setLeaders(List<CenterLeader> leaders) {
    this.leaders = leaders;
  }

  public void setModificationJustification(String modificationJustification) {
    this.modificationJustification = modificationJustification;
  }


  public void setModifiedBy(User modifiedBy) {
    this.modifiedBy = modifiedBy;
  }

  public void setName(String name) {
    this.name = name;
  }


  /**
   * @param programType the programType to set
   */
  public void setProgramType(CenterAllTypes programType) {
    this.programType = programType;
  }


  public void setProjects(Set<CenterProject> projects) {
    this.projects = projects;
  }


  /**
   * @param researchArea the researchArea to set
   */
  public void setResearchArea(CenterArea researchArea) {
    this.researchArea = researchArea;
  }

  public void setResearchImpacts(Set<CenterImpact> researchImpacts) {
    this.researchImpacts = researchImpacts;
  }


  /**
   * @param researchLeaders the researchLeaders to set
   */
  public void setResearchLeaders(Set<CenterLeader> researchLeaders) {
    this.researchLeaders = researchLeaders;
  }


  public void setResearchTopics(Set<CenterTopic> researchTopics) {
    this.researchTopics = researchTopics;
  }

  public void setSectionStatuses(Set<CenterSectionStatus> sectionStatuses) {
    this.sectionStatuses = sectionStatuses;
  }


  public void setSubmissions(Set<CenterSubmission> submissions) {
    this.submissions = submissions;
  }

  public void setTopics(List<CenterTopic> topics) {
    this.topics = topics;
  }

  @Override
  public String toString() {
    return id.toString();
  }


}

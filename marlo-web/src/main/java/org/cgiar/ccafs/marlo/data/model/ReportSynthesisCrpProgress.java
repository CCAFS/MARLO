package org.cgiar.ccafs.marlo.data.model;
// Generated May 21, 2018 2:10:20 PM by Hibernate Tools 3.4.0.CR1


import org.cgiar.ccafs.marlo.data.IAuditLog;

import java.util.Date;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

import com.google.gson.annotations.Expose;

/**
 * ReportSynthesisCrpProgress generated by hbm2java
 */
public class ReportSynthesisCrpProgress implements java.io.Serializable, IAuditLog {


  private static final long serialVersionUID = 837904862469226831L;


  @Expose
  private Long id;


  @Expose
  private User modifiedBy;


  private ReportSynthesis reportSynthesis;


  @Expose
  private User createdBy;


  @Expose
  private String overallProgress;


  @Expose
  private String summaries;


  @Expose
  private boolean active;


  @Expose
  private Date activeSince;


  @Expose
  private String modificationJustification;


  private Set<ReportSynthesisCrpProgressStudy> reportSynthesisCrpProgressStudies =
    new HashSet<ReportSynthesisCrpProgressStudy>(0);

  private Set<ReportSynthesisCrpProgressTarget> reportSynthesisCrpProgressTargets =
    new HashSet<ReportSynthesisCrpProgressTarget>(0);

  private List<ReportSynthesisCrpProgressTarget> targets;


  private List<ReportSynthesisCrpProgressStudy> plannedStudies;
  private String plannedStudiesValue;

  private List<ProjectExpectedStudy> expectedStudies;

  public ReportSynthesisCrpProgress() {
  }

  @Override
  public boolean equals(Object obj) {
    if (this == obj) {
      return true;
    }
    if (obj == null) {
      return false;
    }
    if (this.getClass() != obj.getClass()) {
      return false;
    }
    ReportSynthesisCrpProgress other = (ReportSynthesisCrpProgress) obj;
    if (id == null) {
      if (other.id != null) {
        return false;
      }
    } else if (!id.equals(other.id)) {
      return false;
    }
    return true;
  }

  public Date getActiveSince() {
    return activeSince;
  }

  public User getCreatedBy() {
    return createdBy;
  }

  public List<ProjectExpectedStudy> getExpectedStudies() {
    return expectedStudies;
  }

  @Override
  public Long getId() {
    return id;
  }

  @Override
  public String getLogDeatil() {
    StringBuilder sb = new StringBuilder();
    sb.append("Id : ").append(this.getId());
    return sb.toString();
  }

  @Override
  public String getModificationJustification() {
    return modificationJustification;
  }

  @Override
  public User getModifiedBy() {
    return modifiedBy;
  }


  public String getOverallProgress() {
    return overallProgress;
  }


  public List<ReportSynthesisCrpProgressStudy> getPlannedStudies() {
    return plannedStudies;
  }


  public String getPlannedStudiesValue() {
    return plannedStudiesValue;
  }


  public ReportSynthesis getReportSynthesis() {
    return reportSynthesis;
  }


  public Set<ReportSynthesisCrpProgressStudy> getReportSynthesisCrpProgressStudies() {
    return reportSynthesisCrpProgressStudies;
  }


  public Set<ReportSynthesisCrpProgressTarget> getReportSynthesisCrpProgressTargets() {
    return reportSynthesisCrpProgressTargets;
  }


  /**
   * @return an array of integers.
   */
  public long[] getStudiesIds() {

    List<ProjectExpectedStudy> expectedStudies = this.getExpectedStudies();
    if (expectedStudies != null) {
      long[] ids = new long[expectedStudies.size()];
      for (int i = 0; i < ids.length; i++) {
        ids[i] = expectedStudies.get(i).getId();
      }
      return ids;
    }
    return null;
  }


  public String getSummaries() {
    return summaries;
  }


  public List<ReportSynthesisCrpProgressTarget> getTargets() {
    return targets;
  }


  @Override
  public int hashCode() {
    final int prime = 31;
    int result = 1;
    result = prime * result + ((id == null) ? 0 : id.hashCode());
    return result;
  }


  @Override
  public boolean isActive() {
    return active;
  }


  public void setActive(boolean active) {
    this.active = active;
  }


  public void setActiveSince(Date activeSince) {
    this.activeSince = activeSince;
  }

  public void setCreatedBy(User createdBy) {
    this.createdBy = createdBy;
  }

  public void setExpectedStudies(List<ProjectExpectedStudy> expectedStudies) {
    this.expectedStudies = expectedStudies;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public void setModificationJustification(String modificationJustification) {
    this.modificationJustification = modificationJustification;
  }

  public void setModifiedBy(User modifiedBy) {
    this.modifiedBy = modifiedBy;
  }

  public void setOverallProgress(String overallProgress) {
    this.overallProgress = overallProgress;
  }


  public void setPlannedStudies(List<ReportSynthesisCrpProgressStudy> plannedStudies) {
    this.plannedStudies = plannedStudies;
  }

  public void setPlannedStudiesValue(String plannedStudiesValue) {
    this.plannedStudiesValue = plannedStudiesValue;
  }

  public void setReportSynthesis(ReportSynthesis reportSynthesis) {
    this.reportSynthesis = reportSynthesis;
  }

  public void
    setReportSynthesisCrpProgressStudies(Set<ReportSynthesisCrpProgressStudy> reportSynthesisCrpProgressStudies) {
    this.reportSynthesisCrpProgressStudies = reportSynthesisCrpProgressStudies;
  }

  public void
    setReportSynthesisCrpProgressTargets(Set<ReportSynthesisCrpProgressTarget> reportSynthesisCrpProgressTargets) {
    this.reportSynthesisCrpProgressTargets = reportSynthesisCrpProgressTargets;
  }


  public void setSummaries(String summaries) {
    this.summaries = summaries;
  }


  public void setTargets(List<ReportSynthesisCrpProgressTarget> targets) {
    this.targets = targets;
  }


}


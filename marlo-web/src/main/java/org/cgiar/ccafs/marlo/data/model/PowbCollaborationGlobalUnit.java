package org.cgiar.ccafs.marlo.data.model;
// Generated Feb 26, 2018 2:20:26 PM by Hibernate Tools 4.3.1.Final


import org.cgiar.ccafs.marlo.data.IAuditLog;

import com.google.gson.annotations.Expose;

/**
 * PowbCollaborationGlobalUnit generated by hbm2java
 */
public class PowbCollaborationGlobalUnit extends MarloAuditableEntity implements java.io.Serializable, IAuditLog {


  /**
   * 
   */
  private static final long serialVersionUID = 371262147439030983L;


  private PowbSynthesis powbSynthesis;
  @Expose
  private GlobalUnit globalUnit;
  @Expose
  private Institution institution;
  @Expose
  private String flagship;
  @Expose
  private String collaborationType;
  @Expose
  private String brief;
  @Expose
  private Long collaboratorType;
  private String collaboratorTypeName;


  public PowbCollaborationGlobalUnit() {
  }


  @Override
  public boolean equals(Object obj) {
    if (this == obj) {
      return true;
    }
    if (obj == null) {
      return false;
    }

    PowbCollaborationGlobalUnit other = (PowbCollaborationGlobalUnit) obj;
    if (this.getId() == null) {
      if (other.getId() != null) {
        return false;
      }
    } else if (!this.getId().equals(other.getId())) {
      return false;
    }
    return true;
  }

  public String getBrief() {
    return brief;
  }


  public String getCollaborationType() {
    return collaborationType;
  }


  public String getCollaborationTypeName() {
    if (collaborationType == null) {
      return "";
    }
    switch (collaborationType) {
      case "1":
        return "Contribution to";

      case "2":

        return "Service needed from";
      case "3":

        return "Both";

      default:
        return "";

    }

  }


  public Long getCollaboratorType() {
    return collaboratorType;
  }


  public String getCollaboratorTypeName() {
    if (collaboratorTypeName != null) {
      return collaboratorTypeName;
    }
    if (collaboratorType != null) {
      return PowbCollaboratorTypeEnum.getValue(collaboratorType.intValue()).getName();
    }
    return "";
  }

  public String getFlagship() {
    return flagship;
  }

  public GlobalUnit getGlobalUnit() {
    return globalUnit;
  }


  public Institution getInstitution() {
    return institution;
  }

  @Override
  public String getLogDeatil() {
    StringBuilder sb = new StringBuilder();
    sb.append("Id : ").append(this.getId());
    return sb.toString();
  }


  public PowbSynthesis getPowbSynthesis() {
    return powbSynthesis;
  }


  @Override
  public int hashCode() {
    final int prime = 31;
    int result = 1;
    result = prime * result + ((this.getId() == null) ? 0 : this.getId().hashCode());
    return result;
  }


  public void setBrief(String brief) {
    this.brief = brief;
  }


  public void setCollaborationType(String collaborationType) {
    this.collaborationType = collaborationType;
  }


  public void setCollaboratorType(Long collaboratorType) {
    this.collaboratorType = collaboratorType;
  }


  public void setCollaboratorTypeName(String collaboratorTypeName) {
    this.collaboratorTypeName = collaboratorTypeName;
  }


  public void setFlagship(String flagship) {
    this.flagship = flagship;
  }

  public void setGlobalUnit(GlobalUnit globalUnit) {
    this.globalUnit = globalUnit;
  }


  public void setInstitution(Institution institution) {
    this.institution = institution;
  }


  public void setPowbSynthesis(PowbSynthesis powbSynthesis) {
    this.powbSynthesis = powbSynthesis;
  }


}


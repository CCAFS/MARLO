/*****************************************************************
 * This file is part of Managing Agricultural Research for Learning &
 * Outcomes Platform (MARLO).
 * MARLO is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * at your option) any later version.
 * MARLO is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 * You should have received a copy of the GNU General Public License
 * along with MARLO. If not, see <http://www.gnu.org/licenses/>.
 *****************************************************************/

package org.cgiar.ccafs.marlo.data.model;
// Generated Jul 13, 2016 11:45:52 AM by Hibernate Tools 4.3.1.Final


import org.cgiar.ccafs.marlo.data.IAuditLog;

import java.util.Date;

import com.google.gson.annotations.Expose;

/**
 * ProjectFocus generated by hbm2java
 */
public class ProjectFocus implements java.io.Serializable, IAuditLog {


  /**
   * 
   */
  private static final long serialVersionUID = 4814612346573890024L;
  @Expose
  private Long id;


  @Expose
  private CrpProgram crpProgram;


  @Expose
  private Project project;

  @Expose
  private Phase phase;


  @Expose
  private User createdBy;


  @Expose
  private User modifiedBy;


  @Expose
  private boolean active;
  @Expose
  private Date activeSince;
  @Expose
  private String modificationJustification;

  public ProjectFocus() {
  }

  public ProjectFocus(CrpProgram crpProgram, Project project, User usersByCreatedBy, User usersByModifiedBy,
    boolean isActive, Date activeSince, String modificationJustification) {
    this.crpProgram = crpProgram;
    this.project = project;
    this.createdBy = usersByCreatedBy;
    this.modifiedBy = usersByModifiedBy;
    this.active = isActive;
    this.activeSince = activeSince;
    this.modificationJustification = modificationJustification;
  }

  @Override
  public boolean equals(Object obj) {
    if (this == obj) {
      return true;
    }
    if (obj == null) {
      return false;
    }
    if (this.getClass() != obj.getClass()) {
      return false;
    }
    ProjectFocus other = (ProjectFocus) obj;
    if (active != other.active) {
      return false;
    }
    if (this.getCrpProgram() == null) {
      if (other.getCrpProgram() != null) {
        return false;
      }
    } else if (!this.getCrpProgram().getId().equals(other.getCrpProgram().getId())) {
      return false;
    }
    if (this.getProject() == null) {
      if (other.getProject() != null) {
        return false;
      }
    } else if (!this.getProject().getId().equals(other.getProject().getId())) {
      return false;
    }
    if (this.getPhase() == null) {
      if (other.getPhase() != null) {
        return false;
      }
    } else if (!this.getPhase().getId().equals(other.getPhase().getId())) {
      return false;
    }
    return true;
  }

  public Date getActiveSince() {
    return this.activeSince;
  }


  public User getCreatedBy() {
    return createdBy;
  }


  public CrpProgram getCrpProgram() {
    return crpProgram;
  }

  @Override
  public Long getId() {
    return this.id;
  }

  @Override
  public String getLogDeatil() {
    StringBuilder sb = new StringBuilder();

    sb.append("Id : ").append(this.getId());


    return sb.toString();
  }


  @Override
  public String getModificationJustification() {
    return this.modificationJustification;
  }

  @Override
  public User getModifiedBy() {
    return modifiedBy;
  }

  public Phase getPhase() {
    return phase;
  }

  public Project getProject() {
    return project;
  }

  @Override
  public int hashCode() {
    final int prime = 31;
    int result = 1;
    result = prime * result + (active ? 1231 : 1237);
    result = prime * result + ((crpProgram == null) ? 0 : crpProgram.hashCode());
    result = prime * result + ((project == null) ? 0 : project.hashCode());
    return result;
  }

  @Override
  public boolean isActive() {
    return active;
  }


  public void setActive(boolean active) {
    this.active = active;
  }

  public void setActiveSince(Date activeSince) {
    this.activeSince = activeSince;
  }

  public void setCreatedBy(User createdBy) {
    this.createdBy = createdBy;
  }

  public void setCrpProgram(CrpProgram crpProgram) {
    this.crpProgram = crpProgram;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public void setModificationJustification(String modificationJustification) {
    this.modificationJustification = modificationJustification;
  }

  public void setModifiedBy(User modifiedBy) {
    this.modifiedBy = modifiedBy;
  }

  public void setPhase(Phase phase) {
    this.phase = phase;
  }

  public void setProject(Project project) {
    this.project = project;
  }


  @Override
  public String toString() {
    return "ProjectFocus [id=" + id + ", crpProgram=" + crpProgram + ", project=" + project + "]";
  }


}


package org.cgiar.ccafs.marlo.data.model;
// Generated May 26, 2016 9:42:28 AM by Hibernate Tools 4.3.1.Final


import org.cgiar.ccafs.marlo.data.IAuditLog;

import java.util.HashSet;
import java.util.List;
import java.util.Set;

import com.google.gson.annotations.Expose;

/**
 * LocElementType generated by hbm2java
 */
public class LocElementType extends MarloAuditableEntity implements java.io.Serializable, IAuditLog {


  private static final long serialVersionUID = 1795563086382428049L;

  @Expose
  private String name;


  @Expose
  private GlobalUnit crp;

  @Expose
  private boolean scope;

  @Expose
  private Boolean hasCoordinates;


  private LocElementType locElementType;


  private Set<LocElement> locElements = new HashSet<LocElement>(0);


  private Set<LocElementType> locElementTypes = new HashSet<LocElementType>(0);


  private Set<CrpLocElementType> crpLocElementTypes = new HashSet<CrpLocElementType>(0);


  private Set<ProjectLocationElementType> projectLocationElementTypes = new HashSet<ProjectLocationElementType>(0);


  private List<LocElement> locationElements;

  public LocElementType() {
  }

  @Override
  public boolean equals(Object obj) {
    if (this == obj) {
      return true;
    }
    if (obj == null) {
      return false;
    }

    LocElementType other = (LocElementType) obj;
    if (this.getId() == null) {
      if (other.getId() != null) {
        return false;
      }
    } else if (!this.getId().equals(other.getId())) {
      return false;
    }
    return true;
  }

  public GlobalUnit getCrp() {
    return crp;
  }

  public Set<CrpLocElementType> getCrpLocElementTypes() {
    return crpLocElementTypes;
  }


  public Boolean getHasCoordinates() {
    return hasCoordinates;
  }

  public List<LocElement> getLocationElements() {
    return locationElements;
  }

  public Set<LocElement> getLocElements() {
    return this.locElements;
  }

  public LocElementType getLocElementType() {
    return this.locElementType;
  }

  public Set<LocElementType> getLocElementTypes() {
    return this.locElementTypes;
  }

  @Override
  public String getLogDeatil() {
    StringBuilder sb = new StringBuilder();
    sb.append("Id : ").append(this.getId());
    return sb.toString();
  }

  public String getName() {
    return this.name;
  }

  public Set<ProjectLocationElementType> getProjectLocationElementTypes() {
    return projectLocationElementTypes;
  }

  public boolean isScope() {
    return scope;
  }

  public void setCrp(GlobalUnit crp) {
    this.crp = crp;
  }


  public void setCrpLocElementTypes(Set<CrpLocElementType> crpLocElementTypes) {
    this.crpLocElementTypes = crpLocElementTypes;
  }


  public void setHasCoordinates(Boolean hasCoordinates) {
    this.hasCoordinates = hasCoordinates;
  }

  public void setLocationElements(List<LocElement> locationElements) {
    this.locationElements = locationElements;
  }

  public void setLocElements(Set<LocElement> locElements) {
    this.locElements = locElements;
  }

  public void setLocElementType(LocElementType locElementType) {
    this.locElementType = locElementType;
  }

  public void setLocElementTypes(Set<LocElementType> locElementTypes) {
    this.locElementTypes = locElementTypes;
  }

  public void setName(String name) {
    this.name = name;
  }

  public void setProjectLocationElementTypes(Set<ProjectLocationElementType> projectLocationElementTypes) {
    this.projectLocationElementTypes = projectLocationElementTypes;
  }

  public void setScope(boolean scope) {
    this.scope = scope;
  }

  @Override
  public String toString() {
    return "LocElementType [id=" + this.getId() + ", name=" + name + ", crp=" + crp + "]";
  }
}


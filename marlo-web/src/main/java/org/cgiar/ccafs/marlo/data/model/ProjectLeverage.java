package org.cgiar.ccafs.marlo.data.model;
// Generated Dec 12, 2016 8:46:52 AM by Hibernate Tools 4.3.1.Final


import org.cgiar.ccafs.marlo.config.APConstants;
import org.cgiar.ccafs.marlo.data.IAuditLog;

import com.google.gson.annotations.Expose;

/**
 * ProjectLeverage generated by hbm2java
 */
public class ProjectLeverage extends MarloAuditableEntity implements java.io.Serializable, IAuditLog {


  /**
   * 
   */
  private static final long serialVersionUID = -484039148686829274L;


  @Expose
  private Phase phase;
  @Expose
  private String composeID;

  @Expose
  private IpProgram ipProgram;

  @Expose
  private CrpProgram crpProgram;

  @Expose
  private Institution institution;

  private Project project;
  @Expose
  private String title;
  @Expose
  private Integer year;

  @Expose
  private Double budget;

  public ProjectLeverage() {
  }


  @Override
  public boolean equals(Object obj) {
    if (this == obj) {
      return true;
    }
    if (obj == null) {
      return false;
    }
    if (this.getClass() != obj.getClass()) {
      return false;
    }
    ProjectLeverage other = (ProjectLeverage) obj;
    if (this.getId() == null) {
      if (other.getId() != null) {
        return false;
      }
    } else if (!this.getId().equals(other.getId())) {
      return false;
    }
    return true;
  }


  public Double getBudget() {
    return budget;
  }


  public String getComposeID() {
    return composeID;
  }


  public CrpProgram getCrpProgram() {
    return crpProgram;
  }


  public Institution getInstitution() {
    return institution;
  }


  public IpProgram getIpProgram() {
    return ipProgram;
  }


  @Override
  public String getLogDeatil() {
    StringBuilder sb = new StringBuilder();

    sb.append("Id : ").append(this.getId());


    return sb.toString();
  }


  public Phase getPhase() {
    return phase;
  }


  public Project getProject() {
    return project;
  }


  public String getTitle() {
    return title;
  }


  public Integer getYear() {
    return year;
  }


  @Override
  public int hashCode() {
    final int prime = 31;
    int result = 1;
    result = prime * result + ((this.getId() == null) ? 0 : this.getId().hashCode());
    return result;
  }


  public Boolean isPhaseOneLeverage() {
    try {
      if (this.year <= APConstants.PHASE_ONE_YEAR) {
        return true;
      } else {
        return false;
      }
    } catch (Exception e) {
      return false;
    }
  }


  public void setBudget(Double budget) {
    this.budget = budget;
  }


  public void setComposeID(String composeID) {
    this.composeID = composeID;
  }


  public void setCrpProgram(CrpProgram crpProgram) {
    this.crpProgram = crpProgram;
  }


  public void setInstitution(Institution institution) {
    this.institution = institution;
  }


  public void setIpProgram(IpProgram ipProgram) {
    this.ipProgram = ipProgram;
  }

  public void setPhase(Phase phase) {
    this.phase = phase;
  }

  public void setProject(Project project) {
    this.project = project;
  }


  public void setTitle(String title) {
    this.title = title;
  }

  public void setYear(Integer year) {
    this.year = year;
  }

  @Override
  public String toString() {
    return "ProjectLeverage [id=" + this.getId() + ", ipProgram=" + ipProgram + ", crpProgram=" + crpProgram
      + ", institution=" + institution + ", project=" + project + ", title=" + title + ", year=" + year + ", budget="
      + budget + "]";
  }


}


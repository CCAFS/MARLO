package org.cgiar.ccafs.marlo.data.model;
// Generated Apr 18, 2018 3:39:52 PM by Hibernate Tools 3.4.0.CR1


import org.cgiar.ccafs.marlo.data.IAuditLog;

import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import java.util.Set;
import java.util.stream.Collectors;

import com.google.gson.annotations.Expose;

/**
 * ProjectInnovation generated by hbm2java
 */
public class ProjectInnovation extends MarloAuditableEntity implements java.io.Serializable, IAuditLog {


  private static final long serialVersionUID = 2705453715289551611L;

  @Expose
  private Project project;

  private ProjectInnovationInfo projectInnovationInfo;

  private Set<ProjectInnovationInfo> projectInnovationInfos = new HashSet<ProjectInnovationInfo>(0);

  private Set<SectionStatus> sectionStatuses = new HashSet<SectionStatus>(0);

  private Set<ProjectInnovationCountry> projectInnovationCountries = new HashSet<ProjectInnovationCountry>(0);

  private Set<ProjectInnovationContributingOrganization> projectInnovationContributingOrganization =
    new HashSet<ProjectInnovationContributingOrganization>(0);

  private Set<ProjectInnovationOrganization> projectInnovationOrganizations =
    new HashSet<ProjectInnovationOrganization>(0);

  private Set<ProjectInnovationDeliverable> projectInnovationDeliverables =
    new HashSet<ProjectInnovationDeliverable>(0);

  private Set<ProjectInnovationCrp> projectInnovationCrps = new HashSet<ProjectInnovationCrp>(0);

  private List<String> countriesIds = new ArrayList<>();

  private List<ProjectInnovationOrganization> organizations;

  private List<ProjectInnovationDeliverable> deliverables;

  private List<ProjectInnovationContributingOrganization> contributingOrganizations;

  private List<ProjectInnovationCrp> crps;
  private List<ProjectInnovationCountry> countries;
  private String countriesIdsText;

  public String getComposedName() {
    if (projectInnovationInfo != null) {
      return this.getId() + " - " + projectInnovationInfo.getTitle();
    } else {
      return "" + this.getId();
    }
  }

  public List<ProjectInnovationContributingOrganization> getContributingOrganizations() {
    return contributingOrganizations;
  }

  public List<ProjectInnovationCountry> getCountries() {
    return countries;
  }


  public List<String> getCountriesIds() {
    return countriesIds;
  }

  public String getCountriesIdsText() {
    return countriesIdsText;
  }

  public List<ProjectInnovationCrp> getCrps() {
    return crps;
  }

  public List<ProjectInnovationDeliverable> getDeliverables() {
    return deliverables;
  }


  @Override
  public String getLogDeatil() {
    StringBuilder sb = new StringBuilder();
    sb.append("Id : ").append(this.getId());
    return sb.toString();
  }

  public List<ProjectInnovationOrganization> getOrganizations() {
    return organizations;
  }


  public Project getProject() {
    return project;
  }


  public Set<ProjectInnovationContributingOrganization> getProjectInnovationContributingOrganization() {
    return projectInnovationContributingOrganization;
  }

  public Set<ProjectInnovationCountry> getProjectInnovationCountries() {
    return projectInnovationCountries;
  }

  public Set<ProjectInnovationCrp> getProjectInnovationCrps() {
    return projectInnovationCrps;
  }

  public Set<ProjectInnovationDeliverable> getProjectInnovationDeliverables() {
    return projectInnovationDeliverables;
  }

  public ProjectInnovationInfo getProjectInnovationInfo() {
    return projectInnovationInfo;
  }

  public ProjectInnovationInfo getProjectInnovationInfo(Phase phase) {
    if (this.getProjectInnovationInfo() != null) {
      return this.getProjectInnovationInfo();
    } else {
      List<ProjectInnovationInfo> infos =
        projectInnovationInfos.stream().filter(c -> c != null && c.getPhase() != null && c.getPhase().getId() != null
          && c.getPhase().getId().longValue() == phase.getId()).collect(Collectors.toList());
      if (!infos.isEmpty()) {
        this.setProjectInnovationInfo(infos.get(0));
        return this.getProjectInnovationInfo();
      } else {
        return null;
      }
    }
  }

  public Set<ProjectInnovationInfo> getProjectInnovationInfos() {
    return projectInnovationInfos;
  }

  public Set<ProjectInnovationOrganization> getProjectInnovationOrganizations() {
    return projectInnovationOrganizations;
  }

  public Set<SectionStatus> getSectionStatuses() {
    return sectionStatuses;
  }

  public void setContributingOrganizations(List<ProjectInnovationContributingOrganization> contributingOrganizations) {
    this.contributingOrganizations = contributingOrganizations;
  }

  public void setCountries(List<ProjectInnovationCountry> countries) {
    this.countries = countries;
  }

  public void setCountriesIds(List<String> countriesIds) {
    this.countriesIds = countriesIds;
  }

  public void setCountriesIdsText(String countriesIdsText) {
    this.countriesIdsText = countriesIdsText;
  }


  public void setCrps(List<ProjectInnovationCrp> crps) {
    this.crps = crps;
  }

  public void setDeliverables(List<ProjectInnovationDeliverable> deliverables) {
    this.deliverables = deliverables;
  }

  public void setOrganizations(List<ProjectInnovationOrganization> organizations) {
    this.organizations = organizations;
  }

  public void setProject(Project project) {
    this.project = project;
  }

  public void setProjectInnovationContributingOrganization(
    Set<ProjectInnovationContributingOrganization> projectInnovationContributingOrganization) {
    this.projectInnovationContributingOrganization = projectInnovationContributingOrganization;
  }

  public void setProjectInnovationCountries(Set<ProjectInnovationCountry> projectInnovationCountries) {
    this.projectInnovationCountries = projectInnovationCountries;
  }

  public void setProjectInnovationCrps(Set<ProjectInnovationCrp> projectInnovationCrps) {
    this.projectInnovationCrps = projectInnovationCrps;
  }

  public void setProjectInnovationDeliverables(Set<ProjectInnovationDeliverable> projectInnovationDeliverables) {
    this.projectInnovationDeliverables = projectInnovationDeliverables;
  }

  public void setProjectInnovationInfo(ProjectInnovationInfo projectInnovationInfo) {
    this.projectInnovationInfo = projectInnovationInfo;
  }

  public void setProjectInnovationInfos(Set<ProjectInnovationInfo> projectInnovationInfos) {
    this.projectInnovationInfos = projectInnovationInfos;
  }

  public void setProjectInnovationOrganizations(Set<ProjectInnovationOrganization> projectInnovationOrganizations) {
    this.projectInnovationOrganizations = projectInnovationOrganizations;
  }

  public void setSectionStatuses(Set<SectionStatus> sectionStatuses) {
    this.sectionStatuses = sectionStatuses;
  }

  @Override
  public String toString() {
    return "ProjectInnovation [id=" + this.getId() + ", isActive=" + this.isActive() + "]";
  }
}


<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.cgiar.ccafs</groupId>
		<artifactId>marlo-parent</artifactId>
		<version>4.2.5-SNAPSHOT</version>
		<relativePath>../marlo-parent/pom.xml</relativePath>
	</parent>
	<artifactId>marlo-web</artifactId>
	<packaging>war</packaging>
	<name>marlo-web</name>
	<description>Marlo-Web</description>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<!-- The jdt_apt value is so that target classes can be generated from 
			annotations in eclipse -->
		<m2e.apt.activation>jdt_apt</m2e.apt.activation>
	</properties>

	<developers>
		<developer>
			<name>Christian David Garcia Oviedo</name>
			<email>c.d.garcia@cgiar.org</email>
		</developer>
		<developer>
			<name>Héctor F. Tobón R.</name>
			<email>h.f.tobon@cgiar.org</email>
		</developer>
		<developer>
			<name>Hernán D. Carvajal B.</name>
			<email>h.d.carvajal@cgiar.org</email>
		</developer>
		<developer>
			<name>Hermes Jimenez</name>
			<email>h.jimenez@cgiar.org</email>
		</developer>
		<developer>
			<name>Sebastian Amariles</name>
			<email>s.amariles@cgiar.org</email>
		</developer>
	</developers>
	<issueManagement>
		<system>Github issue tracker</system>
		<url>https://github.com/CCAFS/marlo/issues</url>
	</issueManagement>
	<dependencies>
		<!-- MARLO sub-module dependecies -->
		<dependency>
			<groupId>org.cgiar.ccafs</groupId>
			<artifactId>marlo-utils</artifactId>
		</dependency>
		<!-- End of project dependecies -->
		<!-- STRUTS 2 - Framework Core -->
		<dependency>
			<groupId>org.apache.struts</groupId>
			<artifactId>struts2-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.struts</groupId>
			<artifactId>struts2-config-browser-plugin</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.struts</groupId>
			<artifactId>struts2-junit-plugin</artifactId>
		</dependency>
		<dependency>
			<groupId>org.cgiar.ciat.auth</groupId>
			<artifactId>adauth</artifactId>
		</dependency>
		<dependency>
			<groupId>org.pentaho</groupId>
			<artifactId>core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.pentaho</groupId>
			<artifactId>extensions</artifactId>
		</dependency>
		<dependency>
			<groupId>org.pentaho</groupId>
			<artifactId>base</artifactId>
		</dependency>
		<dependency>
			<groupId>org.pentaho</groupId>
			<artifactId>libdocbundle</artifactId>
		</dependency>
		<dependency>
			<groupId>org.pentaho</groupId>
			<artifactId>libfonts</artifactId>
		</dependency>
		<dependency>
			<groupId>org.pentaho</groupId>
			<artifactId>libformat</artifactId>
		</dependency>
		<dependency>
			<groupId>org.pentaho</groupId>
			<artifactId>libformula</artifactId>
		</dependency>
		<dependency>
			<groupId>org.pentaho</groupId>
			<artifactId>libloader</artifactId>
		</dependency>
		<dependency>
			<groupId>org.pentaho</groupId>
			<artifactId>librepository</artifactId>
		</dependency>
		<dependency>
			<groupId>org.pentaho</groupId>
			<artifactId>libserializer</artifactId>
		</dependency>
		<dependency>
			<groupId>org.pentaho</groupId>
			<artifactId>libxml</artifactId>
		</dependency>
		<dependency>
			<groupId>org.pentaho</groupId>
			<artifactId>libswing</artifactId>
		</dependency>
		<dependency>
			<groupId>org.pentaho</groupId>
			<artifactId>libsparkline</artifactId>
		</dependency>
		<dependency>
			<groupId>org.pentaho</groupId>
			<artifactId>charts</artifactId>
		</dependency>
		<dependency>
			<groupId>org.pentaho</groupId>
			<artifactId>report-charts</artifactId>
		</dependency>
		<!-- Struts Convention plugin may not be required anymore after we ditched 
			the struts-rest plugin -->
		<dependency>
			<groupId>org.apache.struts</groupId>
			<artifactId>struts2-convention-plugin</artifactId>
		</dependency>
		<!-- Struts JSON library -->
		<dependency>
			<groupId>org.apache.struts</groupId>
			<artifactId>struts2-json-plugin</artifactId>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-core</artifactId>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
		</dependency>
		<!-- Java JSON Library -->
		<dependency>
			<groupId>org.json</groupId>
			<artifactId>json</artifactId>
		</dependency>
		<!-- Our struts2 spring plugin should be the same version as our struts2 
			library -->
		<dependency>
			<groupId>org.apache.struts</groupId>
			<artifactId>struts2-spring-plugin</artifactId>
		</dependency>
		<!-- Spring dependencies -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context-support</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aop</artifactId>
		</dependency>
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger2</artifactId>
		</dependency>
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger-ui</artifactId>
		</dependency>
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjrt</artifactId>
		</dependency>
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjweaver</artifactId>
		</dependency>
		<!-- End spring dependencies -->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
		</dependency>
		<!-- This dependency allows conditions in logger configuration -->
		<dependency>
			<groupId>org.codehaus.janino</groupId>
			<artifactId>janino</artifactId>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
		</dependency>
		<dependency>
			<groupId>javax.servlet.jsp</groupId>
			<artifactId>javax.servlet.jsp-api</artifactId>
		</dependency>
		<!-- Apache POI - JAVA API To Access Microsoft XLS Format Files -->
		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi</artifactId>
		</dependency>
		<!-- Apache POI - JAVA API To Access Microsoft XLSX Format Files -->
		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi-ooxml</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>ooxml-schemas</artifactId>
		</dependency>
		<!-- Database version control -->
		<dependency>
			<groupId>org.flywaydb</groupId>
			<artifactId>flyway-core</artifactId>
		</dependency>
		<!-- START Hibernate -->
		<!-- Hibernate Core -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId>
		</dependency>
		<dependency>
			<groupId>com.zaxxer</groupId>
			<artifactId>HikariCP</artifactId>
		</dependency>
		<!-- Dependency needed for Hibernate -->
		<dependency>
			<groupId>javax.transaction</groupId>
			<artifactId>jta</artifactId>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
		</dependency>
		<!-- END Hibernate -->
		<!-- jasper -->
		<dependency>
			<groupId>net.sf.jasperreports</groupId>
			<artifactId>jasperreports</artifactId>
		</dependency>
		<dependency>
			<groupId>org.codehaus.groovy</groupId>
			<artifactId>groovy-all</artifactId>
		</dependency>
		<dependency>
			<groupId>xml-apis</groupId>
			<artifactId>xml-apis</artifactId>
		</dependency>
		<dependency>
			<groupId>net.sf.jasperreports</groupId>
			<artifactId>jasperreports-fonts</artifactId>
		</dependency>
		<!-- End jasper -->
		<!-- gson -->
		<dependency>
			<groupId>com.google.code.gson</groupId>
			<artifactId>gson</artifactId>
		</dependency>
		<!-- Apache shiro -->
		<dependency>
			<groupId>org.apache.shiro</groupId>
			<artifactId>shiro-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.shiro</groupId>
			<artifactId>shiro-spring</artifactId>
		</dependency>
		<dependency>
			<groupId>com.pusher</groupId>
			<artifactId>pusher-http-java</artifactId>
		</dependency>
		<!-- Dependency for pentaho -->
		<dependency>
			<groupId>com.lowagie</groupId>
			<artifactId>itext</artifactId>
		</dependency>
		<dependency>
			<groupId>com.lowagie</groupId>
			<artifactId>itext-rtf</artifactId>
		</dependency>
		<dependency>
			<groupId>org.beanshell</groupId>
			<artifactId>bsh</artifactId>
		</dependency>
		<!-- https://mvnrepository.com/artifact/bsf/bsf -->
		<dependency>
			<groupId>bsf</groupId>
			<artifactId>bsf</artifactId>
		</dependency>
		<dependency>
			<groupId>net.sourceforge.barbecue</groupId>
			<artifactId>barbecue</artifactId>
		</dependency>
		<dependency>
			<groupId>javax.ws.rs</groupId>
			<artifactId>javax.ws.rs-api</artifactId>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jersey.core</groupId>
			<artifactId>jersey-client</artifactId>
		</dependency>
		<!-- https://mvnrepository.com/artifact/jfree/jfreechart -->
		<dependency>
			<groupId>jfree</groupId>
			<artifactId>jfreechart</artifactId>
		</dependency>
		<!-- https://mvnrepository.com/artifact/jfree/jcommon -->
		<dependency>
			<groupId>jfree</groupId>
			<artifactId>jcommon</artifactId>
		</dependency>
		<!-- easy rules -->
		<dependency>
			<groupId>org.easyrules</groupId>
			<artifactId>easyrules-core</artifactId>
		</dependency>
		<!-- library to ws client -->
		<dependency>
			<groupId>org.apache.axis</groupId>
			<artifactId>axis</artifactId>
		</dependency>
		<!-- library to cast xml to object -->
		<dependency>
			<groupId>javax.xml</groupId>
			<artifactId>jaxrpc-api</artifactId>
		</dependency>
		<!-- https://mvnrepository.com/artifact/commons-discovery/commons-discovery -->
		<dependency>
			<groupId>commons-discovery</groupId>
			<artifactId>commons-discovery</artifactId>
		</dependency>
		<!-- https://mvnrepository.com/artifact/wsdl4j/wsdl4j -->
		<dependency>
			<groupId>wsdl4j</groupId>
			<artifactId>wsdl4j</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.tomcat</groupId>
			<artifactId>catalina</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.mapstruct</groupId>
			<artifactId>mapstruct-jdk8</artifactId>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator</artifactId>
		</dependency>
		<!-- Quartz framework -->
		<dependency>
			<groupId>org.quartz-scheduler</groupId>
			<artifactId>quartz</artifactId>
		</dependency>
		<!-- Slack WebHook Library - To send notifications to Slack Chat rooms -->
		<dependency>
			<groupId>net.gpedro.integrations.slack</groupId>
			<artifactId>slack-webhook</artifactId>
		</dependency>
		<dependency>
			<groupId>javax.el</groupId>
			<artifactId>javax.el-api</artifactId>
			<version>2.2.4</version>
		</dependency>
		<dependency>
			<groupId>org.glassfish.web</groupId>
			<artifactId>javax.el</artifactId>
			<version>2.2.4</version>
		</dependency>
		<!--  Apache commons String Validations -->
		<dependency>
			<groupId>commons-validator</groupId>
			<artifactId>commons-validator</artifactId>
		</dependency>
	</dependencies>

	<build>
		<finalName>${project.artifactId}</finalName>
		<defaultGoal>tomcat7:run</defaultGoal>

		<plugins>
			<plugin>
				<!--To support checkstyle goals. For example: "mvn checkstyle:checkstyle" -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
			</plugin>
			<!-- Tomcat plugin just to test compatibilities with Tomcat. -->
			<plugin>
				<groupId>org.apache.tomcat.maven</groupId>
				<artifactId>tomcat7-maven-plugin</artifactId>
				<configuration>
					<port>8080</port>
					<useTestClasspath>true</useTestClasspath>
					<httpsPort>8443</httpsPort>
					<keystoreFile>${project.basedir}/.keystore</keystoreFile>
					<keystorePass>d5jtY68oBqWj</keystorePass>
					<contextFile>tomcat/context.xml</contextFile>
					<!-- tomcat 7 plugin should only be run on local desktop -->
					<systemProperties>
						<spring.profiles.active>dev</spring.profiles.active>
					</systemProperties>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
			</plugin>
			<plugin>
				<artifactId>maven-war-plugin</artifactId>
				<configuration>
					<archive>
						<manifest>
							<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
							<addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
						</manifest>
					</archive>
					<archiveClasses>true</archiveClasses>
					<webXml>src/main/webapp/WEB-INF/web.xml</webXml>
					<packagingExcludes>WEB-INF/lib/asm-1.5.3.jar</packagingExcludes>
				</configuration>
			</plugin>

			<!-- MINIFYING CSS AND JS - TEST -->
			<plugin>
				<groupId>com.samaxes.maven</groupId>
				<artifactId>minify-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>default-minify</id>
						<phase>package</phase>
						<configuration>
							<charset>UTF-8</charset>
							<nosuffix>true</nosuffix>
							<skipMerge>true</skipMerge>
							<verbose>true</verbose>
							<!-- CSS -->
							<cssSourceDir>./</cssSourceDir>
							<cssSourceIncludes>
								<cssSourceInclude>crp/css/**/*.css</cssSourceInclude>
								<cssSourceInclude>center/css/**/*.css</cssSourceInclude>
								<cssSourceInclude>global/css/**/*.css</cssSourceInclude>
							</cssSourceIncludes>

							<!-- Javascript -->
							<jsSourceDir>./</jsSourceDir>
							<jsSourceIncludes>
								<jsSourceInclude>crp/js/**/*.js</jsSourceInclude>
								<jsSourceInclude>center/js/**/*.js</jsSourceInclude>
								<jsSourceInclude>global/js/**/*.js</jsSourceInclude>
							</jsSourceIncludes>

						</configuration>
						<goals>
							<goal>minify</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!-- END -->

		</plugins>
	</build>
	<repositories>
		<repository>
			<id>Internal project repo</id>
			<url>file://${basedir}/src/main/resources/libs/</url>
		</repository>

		<!-- Maven repo -->

	</repositories>
	<licenses>
		<license>
			<name>GNU General Public License (GPL)</name>
			<url>http://www.gnu.org/licenses/gpl.txt</url>
			<distribution>manual</distribution>
		</license>
	</licenses>
</project>
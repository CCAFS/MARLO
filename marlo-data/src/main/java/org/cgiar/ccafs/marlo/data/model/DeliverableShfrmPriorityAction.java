package org.cgiar.ccafs.marlo.data.model;
// Generated Jun 27, 2017 2:55:00 PM by Hibernate Tools 4.3.1.Final

import org.cgiar.ccafs.marlo.data.IAuditLog;

import java.util.HashSet;
import java.util.List;
import java.util.Set;

import com.google.gson.annotations.Expose;

/**
 * ProjectInfo generated by hbm2java
 */
public class DeliverableShfrmPriorityAction extends MarloAuditableEntity implements java.io.Serializable, IAuditLog {

  private static final long serialVersionUID = -3820243690705823369L;

  @Expose
  private Deliverable deliverable;
  @Expose
  private ShfrmPriorityAction shfrmPriorityAction;
  @Expose
  private Phase phase;

  private List<DeliverableShfrmSubAction> shfrmSubActions;

  private Set<DeliverableShfrmSubAction> deliverableShfrmSubAction = new HashSet<DeliverableShfrmSubAction>(0);

  public DeliverableShfrmPriorityAction() {
  }

  public Deliverable getDeliverable() {
    return deliverable;
  }

  public Set<DeliverableShfrmSubAction> getDeliverableShfrmSubAction() {
    return deliverableShfrmSubAction;
  }

  @Override
  public String getLogDeatil() {
    StringBuilder sb = new StringBuilder();
    sb.append("Id : ").append(this.getId());
    return sb.toString();
  }

  public Phase getPhase() {
    return phase;
  }

  public ShfrmPriorityAction getShfrmPriorityAction() {
    return shfrmPriorityAction;
  }

  public List<DeliverableShfrmSubAction> getShfrmSubActions() {
    return shfrmSubActions;
  }

  @Override
  public boolean isActive() {
    return true;
  }

  public void setDeliverable(Deliverable deliverable) {
    this.deliverable = deliverable;
  }

  public void setDeliverableShfrmSubAction(Set<DeliverableShfrmSubAction> deliverableShfrmSubAction) {
    this.deliverableShfrmSubAction = deliverableShfrmSubAction;
  }

  public void setPhase(Phase phase) {
    this.phase = phase;
  }

  public void setShfrmPriorityAction(ShfrmPriorityAction shfrmPriorityAction) {
    this.shfrmPriorityAction = shfrmPriorityAction;
  }

  public void setShfrmSubActions(List<DeliverableShfrmSubAction> shfrmSubActions) {
    this.shfrmSubActions = shfrmSubActions;
  }
}

package org.cgiar.ccafs.marlo.data.model;
// Generated Jan 3, 2017 1:26:41 PM by Hibernate Tools 4.3.1.Final


import org.cgiar.ccafs.marlo.data.IAuditLog;

import java.util.HashSet;
import java.util.Set;

import com.google.gson.annotations.Expose;

/**
 * IpIndicators generated by hbm2java
 */
public class IpIndicator extends MarloAuditableEntity implements java.io.Serializable, IAuditLog {


  /**
   * 
   */
  private static final long serialVersionUID = 4916518235319402584L;

  @Expose
  private IpElement ipElement;
  @Expose
  private IpIndicator ipIndicator;

  @Expose
  private IpProgramElement ipProgramElement;
  @Expose
  private String description;
  @Expose
  private String target;

  private Set<OutcomeSynthesy> outcomeSynthesis = new HashSet<OutcomeSynthesy>(0);
  private Set<IpIndicator> ipIndicators = new HashSet<IpIndicator>(0);
  private Set<IpProjectIndicator> ipProjectIndicators = new HashSet<IpProjectIndicator>(0);

  public IpIndicator() {
  }

  @Override
  public boolean equals(Object obj) {
    if (this == obj) {
      return true;
    }
    if (obj == null) {
      return false;
    }
    if (this.getClass() != obj.getClass()) {
      return false;
    }
    IpIndicator other = (IpIndicator) obj;
    if (this.getId() == null) {
      if (other.getId() != null) {
        return false;
      }
    } else if (!this.getId().equals(other.getId())) {
      return false;
    }
    return true;
  }

  public String getComposedName() {

    return ipProgramElement.getIpProgram().getAcronym() + "- " + description;
  }

  public String getDescription() {
    return description;
  }

  public IpElement getIpElement() {
    return ipElement;
  }


  public IpIndicator getIpIndicator() {
    return ipIndicator;
  }


  public Set<IpIndicator> getIpIndicators() {
    return ipIndicators;
  }


  public IpProgramElement getIpProgramElement() {
    return ipProgramElement;
  }


  public Set<IpProjectIndicator> getIpProjectIndicators() {
    return ipProjectIndicators;
  }


  @Override
  public String getLogDeatil() {
    StringBuilder sb = new StringBuilder();
    sb.append("Id : ").append(this.getId());
    return sb.toString();
  }


  public Set<OutcomeSynthesy> getOutcomeSynthesis() {
    return outcomeSynthesis;
  }


  public String getTarget() {
    return target;
  }


  @Override
  public int hashCode() {
    final int prime = 31;
    int result = 1;
    result = prime * result + ((this.getId() == null) ? 0 : this.getId().hashCode());
    return result;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public void setIpElement(IpElement ipElement) {
    this.ipElement = ipElement;
  }


  public void setIpIndicator(IpIndicator ipIndicator) {
    this.ipIndicator = ipIndicator;
  }


  public void setIpIndicators(Set<IpIndicator> ipIndicators) {
    this.ipIndicators = ipIndicators;
  }


  public void setIpProgramElement(IpProgramElement ipProgramElement) {
    this.ipProgramElement = ipProgramElement;
  }


  public void setIpProjectIndicators(Set<IpProjectIndicator> ipProjectIndicators) {
    this.ipProjectIndicators = ipProjectIndicators;
  }


  public void setOutcomeSynthesis(Set<OutcomeSynthesy> outcomeSynthesis) {
    this.outcomeSynthesis = outcomeSynthesis;
  }


  public void setTarget(String target) {
    this.target = target;
  }


  @Override
  public String toString() {
    return "IpIndicator [id=" + this.getId() + ", ipElement=" + ipElement + ", ipIndicator=" + ipIndicator
      + ", ipProgramElement=" + ipProgramElement + ", modifiedBy=" + this.getModifiedBy() + ", createdBy="
      + this.getCreatedBy() + ", description=" + description + ", target=" + target + "]";
  }


}


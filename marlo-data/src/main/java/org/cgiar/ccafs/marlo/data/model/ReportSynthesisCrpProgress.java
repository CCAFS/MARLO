package org.cgiar.ccafs.marlo.data.model;
// Generated May 21, 2018 2:10:20 PM by Hibernate Tools 3.4.0.CR1


import org.cgiar.ccafs.marlo.data.IAuditLog;

import java.util.HashSet;
import java.util.List;
import java.util.Set;

import com.google.gson.annotations.Expose;

/**
 * ReportSynthesisCrpProgress generated by hbm2java
 */
public class ReportSynthesisCrpProgress extends MarloAuditableEntity implements java.io.Serializable, IAuditLog {


  private static final long serialVersionUID = 837904862469226831L;

  private ReportSynthesis reportSynthesis;

  @Expose
  private String overallProgress;


  @Expose
  private String summaries;

  private Set<ReportSynthesisCrpProgressStudy> reportSynthesisCrpProgressStudies =
    new HashSet<ReportSynthesisCrpProgressStudy>(0);


  private Set<ReportSynthesisCrpProgressTarget> reportSynthesisCrpProgressTargets =
    new HashSet<ReportSynthesisCrpProgressTarget>(0);


  private List<ReportSynthesisCrpProgressTarget> sloTargets;

  private List<ReportSynthesisCrpProgressStudy> plannedStudies;

  private String plannedStudiesValue;


  private List<ProjectExpectedStudy> expectedStudies;

  public ReportSynthesisCrpProgress() {
  }

  @Override
  public boolean equals(Object obj) {
    if (this == obj) {
      return true;
    }
    if (obj == null) {
      return false;
    }
    if (this.getClass() != obj.getClass()) {
      return false;
    }
    ReportSynthesisCrpProgress other = (ReportSynthesisCrpProgress) obj;
    if (this.getId() == null) {
      if (other.getId() != null) {
        return false;
      }
    } else if (!this.getId().equals(other.getId())) {
      return false;
    }
    return true;
  }

  public List<ProjectExpectedStudy> getExpectedStudies() {
    return expectedStudies;
  }

  @Override
  public String getLogDeatil() {
    StringBuilder sb = new StringBuilder();
    sb.append("Id : ").append(this.getId());
    return sb.toString();
  }

  public String getOverallProgress() {
    return overallProgress;
  }

  public List<ReportSynthesisCrpProgressStudy> getPlannedStudies() {
    return plannedStudies;
  }


  public String getPlannedStudiesValue() {
    return plannedStudiesValue;
  }


  public ReportSynthesis getReportSynthesis() {
    return reportSynthesis;
  }


  public Set<ReportSynthesisCrpProgressStudy> getReportSynthesisCrpProgressStudies() {
    return reportSynthesisCrpProgressStudies;
  }


  public Set<ReportSynthesisCrpProgressTarget> getReportSynthesisCrpProgressTargets() {
    return reportSynthesisCrpProgressTargets;
  }


  public List<ReportSynthesisCrpProgressTarget> getSloTargets() {
    return sloTargets;
  }


  /**
   * @return an array of integers.
   */
  public long[] getStudiesIds() {

    List<ProjectExpectedStudy> expectedStudies = this.getExpectedStudies();
    if (expectedStudies != null) {
      long[] ids = new long[expectedStudies.size()];
      for (int i = 0; i < ids.length; i++) {
        ids[i] = expectedStudies.get(i).getId();
      }
      return ids;
    }
    return null;
  }


  public String getSummaries() {
    return summaries;
  }


  @Override
  public int hashCode() {
    final int prime = 31;
    int result = 1;
    result = prime * result + ((this.getId() == null) ? 0 : this.getId().hashCode());
    return result;
  }

  public void setExpectedStudies(List<ProjectExpectedStudy> expectedStudies) {
    this.expectedStudies = expectedStudies;
  }

  public void setOverallProgress(String overallProgress) {
    this.overallProgress = overallProgress;
  }

  public void setPlannedStudies(List<ReportSynthesisCrpProgressStudy> plannedStudies) {
    this.plannedStudies = plannedStudies;
  }


  public void setPlannedStudiesValue(String plannedStudiesValue) {
    this.plannedStudiesValue = plannedStudiesValue;
  }

  public void setReportSynthesis(ReportSynthesis reportSynthesis) {
    this.reportSynthesis = reportSynthesis;
  }

  public void
    setReportSynthesisCrpProgressStudies(Set<ReportSynthesisCrpProgressStudy> reportSynthesisCrpProgressStudies) {
    this.reportSynthesisCrpProgressStudies = reportSynthesisCrpProgressStudies;
  }

  public void
    setReportSynthesisCrpProgressTargets(Set<ReportSynthesisCrpProgressTarget> reportSynthesisCrpProgressTargets) {
    this.reportSynthesisCrpProgressTargets = reportSynthesisCrpProgressTargets;
  }

  public void setSloTargets(List<ReportSynthesisCrpProgressTarget> sloTargets) {
    this.sloTargets = sloTargets;
  }


  public void setSummaries(String summaries) {
    this.summaries = summaries;
  }


}


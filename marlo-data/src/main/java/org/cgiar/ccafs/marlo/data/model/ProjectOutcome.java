package org.cgiar.ccafs.marlo.data.model;
// Generated Aug 22, 2016 10:31:13 AM by Hibernate Tools 4.3.1.Final


import org.cgiar.ccafs.marlo.data.IAuditLog;

import java.util.HashSet;
import java.util.List;
import java.util.Set;

import com.google.gson.annotations.Expose;

/**
 * ProjectOutcome generated by hbm2java
 */
public class ProjectOutcome extends MarloAuditableEntity implements java.io.Serializable, IAuditLog {


  /**
   * 
   */
  private static final long serialVersionUID = -768122169369973256L;
  @Expose
  private CrpProgramOutcome crpProgramOutcome;
  @Expose
  private Project project;

  @Expose
  private Double expectedValue;
  @Expose
  private SrfTargetUnit expectedUnit;
  @Expose
  private Double achievedValue;
  @Expose
  private SrfTargetUnit achievedUnit;

  @Expose
  private String narrativeTarget;

  @Expose
  private Phase phase;


  @Expose
  private String narrativeAchieved;

  private Set<ProjectMilestone> projectMilestones = new HashSet<ProjectMilestone>(0);


  private Set<ProjectCommunication> projectCommunications = new HashSet<ProjectCommunication>(0);


  private List<ProjectMilestone> milestones;
  private List<ProjectCommunication> communications;


  private List<ProjectNextuser> nextUsers;

  private Set<ProjectNextuser> projectNextusers = new HashSet<ProjectNextuser>(0);
  private Set<ProjectComponentLesson> projectComponentLessons = new HashSet<ProjectComponentLesson>(0);
  private ProjectComponentLesson projectComponentLesson;
  private ProjectComponentLesson projectComponentLessonPreview;
  private Set<SectionStatus> sectionStatuses = new HashSet<SectionStatus>(0);
  private Set<ProjectOutcomeIndicator> projectOutcomeIndicators = new HashSet<ProjectOutcomeIndicator>(0);
  private List<ProjectOutcomeIndicator> indicators;


  public ProjectOutcome() {
  }

  public SrfTargetUnit getAchievedUnit() {
    return achievedUnit;
  }


  public Double getAchievedValue() {
    return achievedValue;
  }

  public List<ProjectCommunication> getCommunications() {
    return communications;
  }

  public CrpProgramOutcome getCrpProgramOutcome() {
    return crpProgramOutcome;
  }


  public SrfTargetUnit getExpectedUnit() {
    return expectedUnit;
  }


  public Double getExpectedValue() {
    return expectedValue;
  }

  public List<ProjectOutcomeIndicator> getIndicators() {
    return indicators;
  }


  @Override
  public String getLogDeatil() {
    StringBuilder sb = new StringBuilder();

    sb.append("Id : ").append(this.getId());


    return sb.toString();
  }


  public List<ProjectMilestone> getMilestones() {
    return milestones;
  }


  public String getNarrativeAchieved() {
    return narrativeAchieved;
  }


  public String getNarrativeTarget() {
    return narrativeTarget;
  }


  public List<ProjectNextuser> getNextUsers() {
    return nextUsers;
  }


  public Phase getPhase() {
    return phase;
  }


  public Project getProject() {
    return project;
  }

  public Set<ProjectCommunication> getProjectCommunications() {
    return projectCommunications;
  }

  public ProjectComponentLesson getProjectComponentLesson() {
    return projectComponentLesson;
  }


  public ProjectComponentLesson getProjectComponentLessonPreview() {
    return projectComponentLessonPreview;
  }


  public Set<ProjectComponentLesson> getProjectComponentLessons() {
    return projectComponentLessons;
  }


  public Set<ProjectMilestone> getProjectMilestones() {
    return projectMilestones;
  }


  public Set<ProjectNextuser> getProjectNextusers() {
    return projectNextusers;
  }


  public Set<ProjectOutcomeIndicator> getProjectOutcomeIndicators() {
    return projectOutcomeIndicators;
  }


  public Set<SectionStatus> getSectionStatuses() {
    return sectionStatuses;
  }


  public void setAchievedUnit(SrfTargetUnit achievedUnit) {
    this.achievedUnit = achievedUnit;
  }


  public void setAchievedValue(Double achievedValue) {
    this.achievedValue = achievedValue;
  }

  public void setCommunications(List<ProjectCommunication> communications) {
    this.communications = communications;
  }


  public void setCrpProgramOutcome(CrpProgramOutcome crpProgramOutcome) {
    this.crpProgramOutcome = crpProgramOutcome;
  }


  public void setExpectedUnit(SrfTargetUnit expectedUnit) {
    this.expectedUnit = expectedUnit;
  }


  public void setExpectedValue(Double expectedValue) {
    this.expectedValue = expectedValue;
  }

  public void setIndicators(List<ProjectOutcomeIndicator> indicators) {
    this.indicators = indicators;
  }


  public void setMilestones(List<ProjectMilestone> milestones) {
    this.milestones = milestones;
  }


  public void setNarrativeAchieved(String narrativeAchieved) {
    this.narrativeAchieved = narrativeAchieved;
  }


  public void setNarrativeTarget(String narrativeTarget) {
    this.narrativeTarget = narrativeTarget;
  }


  public void setNextUsers(List<ProjectNextuser> nextUsers) {
    this.nextUsers = nextUsers;
  }


  public void setPhase(Phase phase) {
    this.phase = phase;
  }


  public void setProject(Project project) {
    this.project = project;
  }


  public void setProjectCommunications(Set<ProjectCommunication> projectCommunications) {
    this.projectCommunications = projectCommunications;
  }


  public void setProjectComponentLesson(ProjectComponentLesson projectComponentLesson) {
    this.projectComponentLesson = projectComponentLesson;
  }


  public void setProjectComponentLessonPreview(ProjectComponentLesson projectComponentLessonPreview) {
    this.projectComponentLessonPreview = projectComponentLessonPreview;
  }


  public void setProjectComponentLessons(Set<ProjectComponentLesson> projectComponentLessons) {
    this.projectComponentLessons = projectComponentLessons;
  }


  public void setProjectMilestones(Set<ProjectMilestone> projectMilestones) {
    this.projectMilestones = projectMilestones;
  }


  public void setProjectNextusers(Set<ProjectNextuser> projectNextusers) {
    this.projectNextusers = projectNextusers;
  }


  public void setProjectOutcomeIndicators(Set<ProjectOutcomeIndicator> projectOutcomeIndicators) {
    this.projectOutcomeIndicators = projectOutcomeIndicators;
  }


  public void setSectionStatuses(Set<SectionStatus> sectionStatuses) {
    this.sectionStatuses = sectionStatuses;
  }


  @Override
  public String toString() {
    return "ProjectOutcome [id=" + this.getId() + ", crpProgramOutcome=" + crpProgramOutcome + ", project=" + project
      + ", expectedValue=" + expectedValue + ", expectedUnit=" + expectedUnit + ", achievedValue=" + achievedValue
      + ", achievedUnit=" + achievedUnit + "]";
  }


}

